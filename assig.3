// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract MyToken {
    // public variables here
    string public Token_name = "token";
    string public Token_abb = "tok";
    uint public Total_supply = 0;

    // mapping variable here
    mapping(address => uint) public balance;

    // mint function
    function mint(address _add, uint _value) public {
        require(_add != address(0), "Cannot mint to zero address");
        require(_value > 0, "Mint value must be greater than zero");

        Total_supply += _value;
        balance[_add] += _value;

        // Check total supply integrity
        assert(Total_supply >= balance[_add]);
    }

    // burn function
    function burn(address _add, uint _value) public {
        require(_add != address(0), "Cannot burn from zero address");
        require(_value > 0, "Burn value must be greater than zero");
        require(balance[_add] >= _value, "Insufficient balance to burn");

        Total_supply -= _value;
        balance[_add] -= _value;

        // Check total supply integrity
        assert(Total_supply >= 0);

        // If something goes wrong, revert the transaction
        if (Total_supply < 0) {
            revert("Total supply error");
        }
    }
}
